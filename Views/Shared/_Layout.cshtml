<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Declutter</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Declutter.styles.css" asp-append-version="true" />
    <link rel="icon" type="image/x-icon" href="/img/logo3.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Quicksand:wght@300..700&family=Raleway:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<body>
    @Html.AntiForgeryToken()
    <header>
        <nav class="navbar navbar-expand-lg navbar-toggleable-lg navbar-light border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-book-open"></i> Declutter
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-lg-inline-flex justify-content-between">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">
                                <i class="fas fa-home"></i> Home
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Entries" asp-action="Index">
                                <i class="fas fa-book"></i> My Entries
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Entries" asp-action="Create">
                                <i class="fas fa-plus"></i> New Entry
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">
                                <i class="fas fa-shield-alt"></i> Privacy
                            </a>
                        </li>
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    <!-- Login Modal -->
    <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="loginModalLabel">Sign In</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="loginForm" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group mb-3">
                            <label for="loginEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="loginEmail" name="Input.Email" required />
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label for="loginPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="loginPassword" name="Input.Password" required />
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="loginRememberMe" name="Input.RememberMe">
                            <label class="form-check-label" for="loginRememberMe">
                                Remember me
                            </label>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Sign In</button>
                        </div>
                    </form>
                    <div class="text-center mt-3">
                        <p>Don't have an account? <a href="#" id="showRegister">Register</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Register Modal -->
    <div class="modal fade" id="registerModal" tabindex="-1" aria-labelledby="registerModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="registerModalLabel">Create Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="registerForm" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group mb-3">
                            <label for="registerEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="registerEmail" name="Input.Email" required />
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label for="registerPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="registerPassword" name="Input.Password" required />
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword" name="Input.ConfirmPassword" required />
                            <span class="text-danger"></span>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Register</button>
                        </div>
                    </form>
                    <div class="text-center mt-3">
                        <p>Already have an account? <a href="#" id="showLogin">Sign In</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Move Toastr script here, after jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdn.tiny.cloud/1/bgy7ujsun5fczcmimpvmmwa3ihko1d1mbz1jmek6xp3oqn6i/tinymce/8/tinymce.min.js" referrerpolicy="origin" crossorigin="anonymous"></script>

    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        tinymce.init({
          selector: 'textarea#tiny'
        });
    </script>

    <!-- Include the notification partial -->
    <partial name="_Notification" />

    @await RenderSectionAsync("Scripts", required: false)

    <script>
        // Add active class to current page navigation item
        document.addEventListener('DOMContentLoaded', function() {
            const currentUrl = window.location.pathname;
            const navLinks = document.querySelectorAll('.nav-link');

            navLinks.forEach(link => {
                const linkUrl = link.getAttribute('href');
                if (currentUrl === linkUrl || (linkUrl !== '/' && currentUrl.startsWith(linkUrl))) {
                    link.classList.add('active');
                }
            });

            // Smooth scrolling for anchor links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });

            // Modal toggle functionality
            document.getElementById('showRegister')?.addEventListener('click', function(e) {
                e.preventDefault();
                var loginModal = bootstrap.Modal.getInstance(document.getElementById('loginModal'));
                loginModal.hide();
                var registerModal = new bootstrap.Modal(document.getElementById('registerModal'));
                registerModal.show();
            });

            document.getElementById('showLogin')?.addEventListener('click', function(e) {
                e.preventDefault();
                var registerModal = bootstrap.Modal.getInstance(document.getElementById('registerModal'));
                registerModal.hide();
                var loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
                loginModal.show();
            });

            // Form submission handling
            document.getElementById('loginForm')?.addEventListener('submit', function(e) {
                e.preventDefault();
                handleFormSubmission(this, '/Identity/Account/Login?returnUrl=', 'loginModal');
            });

            document.getElementById('registerForm')?.addEventListener('submit', function(e) {
                e.preventDefault();
                handleFormSubmission(this, '/Identity/Account/Register?returnUrl=', 'registerModal');
            });
        });

        function handleFormSubmission(form, url, modalId) {
            const formData = new FormData(form);

            fetch(url, {
                method: 'POST',
                body: formData,
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    return response.text().then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, 'text/html');
                        const validationSummary = doc.querySelector('.validation-summary-errors');
                        const fieldErrors = doc.querySelectorAll('.text-danger');

                        // Clear previous errors
                        form.querySelectorAll('.text-danger').forEach(el => el.textContent = '');

                        if (validationSummary) {
                            // Show general errors
                            toastr.error(validationSummary.textContent);
                        }

                        // Show field-specific errors
                        fieldErrors.forEach(errorElement => {
                            if (errorElement.textContent.trim() !== '') {
                                const fieldName = errorElement.getAttribute('data-valmsg-for');
                                if (fieldName) {
                                    const field = form.querySelector(`[name="${fieldName}"]`);
                                    if (field) {
                                        const errorSpan = field.nextElementSibling;
                                        if (errorSpan && errorSpan.classList.contains('text-danger')) {
                                            errorSpan.textContent = errorElement.textContent;
                                        }
                                    }
                                }
                            }
                        });
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                toastr.error('An error occurred. Please try again.');
            });
        }
    </script>
</body>
</html>